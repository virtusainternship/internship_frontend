[{"/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/index.js":"1","/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/App.js":"2","/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/reportWebVitals.js":"3","/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/components/HeaderComponent.js":"4","/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/components/FooterComponent.js":"5","/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/components/ListEmployeeComponent.js":"6","/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/components/AddEmployeeComponent.js":"7","/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/services/EmployeeService.js":"8"},{"size":546,"mtime":1635568689000,"results":"9","hashOfConfig":"10"},{"size":967,"mtime":1635568689000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1635568689000,"results":"12","hashOfConfig":"10"},{"size":512,"mtime":1646729043968,"results":"13","hashOfConfig":"10"},{"size":292,"mtime":1646730072517,"results":"14","hashOfConfig":"10"},{"size":2349,"mtime":1635568689000,"results":"15","hashOfConfig":"10"},{"size":4804,"mtime":1646759424911,"results":"16","hashOfConfig":"10"},{"size":711,"mtime":1635568689000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2mvbi2",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/index.js",[],[],"/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/App.js",[],[],"/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/reportWebVitals.js",[],[],"/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/components/HeaderComponent.js",[],[],["44","45"],"/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/components/FooterComponent.js",[],[],"/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/components/ListEmployeeComponent.js",[],[],"/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/components/AddEmployeeComponent.js",["46","47"],[],"import React, {useState, useEffect} from 'react'\nimport {Link, useHistory, useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService'\n\nconst AddEmployeeComponent = () => {\n\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [emailId, setEmailId] = useState('')\n    const history = useHistory();\n    const {id} = useParams();\n\n    const saveOrUpdateEmployee = (e) => {\n        e.preventDefault();\n\n        const employee = {firstName, lastName, emailId}\n\n        if(id){\n            EmployeeService.updateEmployee(id, employee).then((response) => {\n                history.push('/employees')\n            }).catch(error => {\n                console.log(error)\n            })\n\n        }else{\n            EmployeeService.createEmployee(employee).then((response) =>{\n\n                console.log(response.data)\n    \n                history.push('/employees');\n    \n            }).catch(error => {\n                console.log(error)\n            })\n        }\n        \n    }\n\n    useEffect(() => {\n\n        EmployeeService.getEmployeeById(id).then((response) =>{\n            setFirstName(response.data.firstName)\n            setLastName(response.data.lastName)\n            setEmailId(response.data.emailId)\n        }).catch(error => {\n            console.log(error)\n        })\n    }, [])\n\n    const validTextRegex = RegExp(\n        /^(?!\\s)[A-Za-z\\s]+$/\n      );\n      \n    const title = () => {\n\n        if(id){\n            return <h2 className = \"text-center\">Update Employee</h2>\n        }else{\n            return <h2 className = \"text-center\">Add Employee</h2>\n        }\n    }\n\n    return (\n        <div>\n           <br /><br />\n           <div className = \"container\">\n                <div className = \"row\">\n                    <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                       {\n                           title()\n                       }\n                        <div className = \"card-body\">\n                            <form onSubmit={(e) => saveOrUpdateEmployee(e)}> \n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> First Name :</label>\n                                    <input\n                                        type = \"text\"\n                                        placeholder = \"Enter first name\"\n                                        name = \"firstName\"\n                                        className = \"form-control\"\n                                        required\n                                        value = {firstName}\n                                        onChange = {(e) => setFirstName(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> Last Name :</label>\n                                    <input\n                                        type = \"text\"\n                                        placeholder = \"Enter last name\"\n                                        name = \"lastName\"\n                                        className = \"form-control\"\n                                        required\n                                        value = {lastName}\n                                        onChange = {(e) => setLastName(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> Email Id :</label>\n                                    <input\n                                        type = \"email\"\n                                        placeholder = \"Enter email Id\"\n                                        name = \"emailId\"\n                                        className = \"form-control\"\n                                        value = {emailId}\n                                        required\n                                        onChange = {(e) => setEmailId(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <button className = \"btn btn-success\" type=\"submit\" >Submit </button>\n                                <Link to=\"/employees\" className=\"btn btn-danger\"> Cancel </Link>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n\n           </div>\n\n        </div>\n    )\n}\n\nexport default AddEmployeeComponent\n","/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/services/EmployeeService.js",[],[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":48,"column":8,"nodeType":"54","endLine":48,"endColumn":10,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":50,"column":11,"nodeType":"58","messageId":"59","endLine":50,"endColumn":25},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["62"],"no-unused-vars","'validTextRegex' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [id]",{"range":"65","text":"66"},[1371,1373],"[id]"]