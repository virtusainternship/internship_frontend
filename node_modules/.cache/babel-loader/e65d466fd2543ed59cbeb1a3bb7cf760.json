{"ast":null,"code":"var _jsxFileName = \"/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/components/AddEmployeeComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEmployeeComponent = () => {\n  _s();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [emailId, setEmailId] = useState('');\n  const [nameErr, setNameErr] = useState(false);\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n\n  const saveOrUpdateEmployee = e => {\n    e.preventDefault();\n    const employee = {\n      firstName,\n      lastName,\n      emailId\n    };\n\n    if (id) {\n      EmployeeService.updateEmployee(id, employee).then(response => {\n        history.push('/employees');\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      EmployeeService.createEmployee(employee).then(response => {\n        console.log(response.data);\n        history.push('/employees');\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  useEffect(() => {\n    EmployeeService.getEmployeeById(id).then(response => {\n      setFirstName(response.data.firstName);\n      setLastName(response.data.lastName);\n      setEmailId(response.data.emailId);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const validTextRegex = new RegExp('/^[a-zA-Z ]*$/');\n\n  const validateRegex = value => {\n    if (!validTextRegex.test(value)) {\n      console.log(false);\n      return false;\n    } else {\n      console.log(true);\n      return true;\n    }\n  };\n\n  const title = () => {\n    if (id) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Update Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const validate = e => {\n    console.log(e.target.value);\n\n    if (validateRegex(e.target.value)) {\n      setNameErr(true);\n    } else {\n      setNameErr(false);\n      setFirstName(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-6 offset-md-3 offset-md-3\",\n          children: [title(), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => saveOrUpdateEmployee(e),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \" First Name :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter first name\",\n                  name: \"firstName\",\n                  className: \"form-control\",\n                  required: true,\n                  value: firstName,\n                  onChange: e => validate(e) // onChange = {(e) => setFirstName(e.target.value)}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), nameErr && /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"Only Alphabets are allowed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \" Last Name :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter last name\",\n                  name: \"lastName\",\n                  className: \"form-control\",\n                  required: true,\n                  value: lastName,\n                  onChange: e => setLastName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \" Email Id :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  placeholder: \"Enter email Id\",\n                  name: \"emailId\",\n                  className: \"form-control\",\n                  value: emailId,\n                  required: true,\n                  onChange: e => setEmailId(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                type: \"submit\",\n                children: \"Submit \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/employees\",\n                className: \"btn btn-danger\",\n                children: \" Cancel \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddEmployeeComponent, \"MeM682IMO9PH0zeA4o/tSaIq2wA=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddEmployeeComponent;\nexport default AddEmployeeComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEmployeeComponent\");","map":{"version":3,"sources":["/Users/deepak/Documents/Learning/Workspace/React-Hooks-Spring-Boot-CRUD-Full-Stack-App-main/react-hooks-frontend/src/components/AddEmployeeComponent.js"],"names":["React","useState","useEffect","Link","useHistory","useParams","EmployeeService","AddEmployeeComponent","firstName","setFirstName","lastName","setLastName","emailId","setEmailId","nameErr","setNameErr","history","id","saveOrUpdateEmployee","e","preventDefault","employee","updateEmployee","then","response","push","catch","error","console","log","createEmployee","data","getEmployeeById","validTextRegex","RegExp","validateRegex","value","test","title","validate","target"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link, useHistory, useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService'\n\nconst AddEmployeeComponent = () => {\n\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [emailId, setEmailId] = useState('')\n    const [nameErr, setNameErr] = useState(false)\n    const history = useHistory();\n    const {id} = useParams();\n\n    const saveOrUpdateEmployee = (e) => {\n        e.preventDefault();\n        const employee = {firstName, lastName, emailId}\n\n        if(id){\n            EmployeeService.updateEmployee(id, employee).then((response) => {\n                history.push('/employees')\n            }).catch(error => {\n                console.log(error)\n            })\n\n        }else{\n            EmployeeService.createEmployee(employee).then((response) =>{\n\n                console.log(response.data)\n    \n                history.push('/employees');\n    \n            }).catch(error => {\n                console.log(error)\n            })\n        }\n        \n    }\n\n    useEffect(() => {\n\n        EmployeeService.getEmployeeById(id).then((response) =>{\n            setFirstName(response.data.firstName)\n            setLastName(response.data.lastName)\n            setEmailId(response.data.emailId)\n        }).catch(error => {\n            console.log(error)\n        })\n    }, [])\n\n\n    const validTextRegex = new RegExp('/^[a-zA-Z ]*$/');\n      \n    const validateRegex = (value) => {\n        if (!validTextRegex.test(value)) {\n            console.log(false);\n          return false;\n        } else {\n            console.log(true);\n          return true;\n        }\n        \n      };\n\n    const title = () => {\n\n        if(id){\n            return <h2 className = \"text-center\">Update Employee</h2>\n        }else{\n            return <h2 className = \"text-center\">Add Employee</h2>\n        }\n    }\n\n     const validate = (e) => { \n         console.log(e.target.value); \n         if (validateRegex(e.target.value)) { \n             setNameErr(true); \n         } else { \n             setNameErr(false); \n             setFirstName(e.target.value); \n         } \n      }; \n\n    return (\n        <div>\n           <br /><br />\n           <div className = \"container\">\n                <div className = \"row\">\n                    <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                       {\n                           title()\n                       }\n                        <div className = \"card-body\">\n                            <form onSubmit={(e) => saveOrUpdateEmployee(e)}> \n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> First Name :</label>\n                                    <input\n                                        type = \"text\"\n                                        placeholder = \"Enter first name\"\n                                        name = \"firstName\"\n                                        className = \"form-control\"\n                                        required\n                                       \n                                        value = {firstName}\n                                        onChange = {(e) => validate(e)}\n                                        // onChange = {(e) => setFirstName(e.target.value)}\n                                        >\n                                          \n                                    </input>\n                                    {nameErr && <h1>Only Alphabets are allowed</h1>} \n                                </div>\n\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> Last Name :</label>\n                                    <input\n                                        type = \"text\"\n                                        placeholder = \"Enter last name\"\n                                        name = \"lastName\"\n                                        className = \"form-control\"\n                                        required\n                                        value = {lastName}\n                                        onChange = {(e) => setLastName(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> Email Id :</label>\n                                    <input\n                                        type = \"email\"\n                                        placeholder = \"Enter email Id\"\n                                        name = \"emailId\"\n                                        className = \"form-control\"\n                                        value = {emailId}\n                                        required\n                                        onChange = {(e) => setEmailId(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <button className = \"btn btn-success\" type=\"submit\" >Submit </button>\n                                <Link to=\"/employees\" className=\"btn btn-danger\"> Cancel </Link>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n\n           </div>\n\n        </div>\n    )\n}\n\nexport default AddEmployeeComponent\n"]},"metadata":{},"sourceType":"module"}